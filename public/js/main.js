/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/main.js":
/*!******************************!*\
  !*** ./resources/js/main.js ***!
  \******************************/
/***/ (() => {

eval("function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/**\r\n* Template Name: Restaurantly - v3.7.0\r\n* Template URL: https://bootstrapmade.com/restaurantly-restaurant-template/\r\n* Author: BootstrapMade.com\r\n* License: https://bootstrapmade.com/license/\r\n*/\n(function () {\n  \"use strict\";\n  /**\r\n   * Easy selector helper function\r\n   */\n\n  var select = function select(el) {\n    var all = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    el = el.trim();\n\n    if (all) {\n      return _toConsumableArray(document.querySelectorAll(el));\n    } else {\n      return document.querySelector(el);\n    }\n  };\n  /**\r\n   * Easy event listener function\r\n   */\n\n\n  var on = function on(type, el, listener) {\n    var all = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    var selectEl = select(el, all);\n\n    if (selectEl) {\n      if (all) {\n        selectEl.forEach(function (e) {\n          return e.addEventListener(type, listener);\n        });\n      } else {\n        selectEl.addEventListener(type, listener);\n      }\n    }\n  };\n  /**\r\n   * Easy on scroll event listener \r\n   */\n\n\n  var onscroll = function onscroll(el, listener) {\n    el.addEventListener('scroll', listener);\n  };\n  /**\r\n   * Navbar links active state on scroll\r\n   */\n\n\n  var navbarlinks = select('#navbar .scrollto', true);\n\n  var navbarlinksActive = function navbarlinksActive() {\n    var position = window.scrollY + 200;\n    navbarlinks.forEach(function (navbarlink) {\n      if (!navbarlink.hash) return;\n      var section = select(navbarlink.hash);\n      if (!section) return;\n\n      if (position >= section.offsetTop && position <= section.offsetTop + section.offsetHeight) {\n        navbarlink.classList.add('active');\n      } else {\n        navbarlink.classList.remove('active');\n      }\n    });\n  };\n\n  window.addEventListener('load', navbarlinksActive);\n  onscroll(document, navbarlinksActive);\n  /**\r\n   * Scrolls to an element with header offset\r\n   */\n\n  var scrollto = function scrollto(el) {\n    var header = select('#header');\n    var offset = header.offsetHeight;\n    var elementPos = select(el).offsetTop;\n    window.scrollTo({\n      top: elementPos - offset,\n      behavior: 'smooth'\n    });\n  };\n  /**\r\n   * Toggle .header-scrolled class to #header when page is scrolled\r\n   */\n\n\n  var selectHeader = select('#header');\n  var selectTopbar = select('#topbar');\n\n  if (selectHeader) {\n    var headerScrolled = function headerScrolled() {\n      if (window.scrollY > 100) {\n        selectHeader.classList.add('header-scrolled');\n\n        if (selectTopbar) {\n          selectTopbar.classList.add('topbar-scrolled');\n        }\n      } else {\n        selectHeader.classList.remove('header-scrolled');\n\n        if (selectTopbar) {\n          selectTopbar.classList.remove('topbar-scrolled');\n        }\n      }\n    };\n\n    window.addEventListener('load', headerScrolled);\n    onscroll(document, headerScrolled);\n  }\n  /**\r\n   * Back to top button\r\n   */\n\n\n  var backtotop = select('.back-to-top');\n\n  if (backtotop) {\n    var toggleBacktotop = function toggleBacktotop() {\n      if (window.scrollY > 100) {\n        backtotop.classList.add('active');\n      } else {\n        backtotop.classList.remove('active');\n      }\n    };\n\n    window.addEventListener('load', toggleBacktotop);\n    onscroll(document, toggleBacktotop);\n  }\n  /**\r\n   * Mobile nav toggle\r\n   */\n\n\n  on('click', '.mobile-nav-toggle', function (e) {\n    select('#navbar').classList.toggle('navbar-mobile');\n    this.classList.toggle('bi-list');\n    this.classList.toggle('bi-x');\n  });\n  /**\r\n   * Mobile nav dropdowns activate\r\n   */\n\n  on('click', '.navbar .dropdown > a', function (e) {\n    if (select('#navbar').classList.contains('navbar-mobile')) {\n      e.preventDefault();\n      this.nextElementSibling.classList.toggle('dropdown-active');\n    }\n  }, true);\n  /**\r\n   * Scrool with ofset on links with a class name .scrollto\r\n   */\n\n  on('click', '.scrollto', function (e) {\n    if (select(this.hash)) {\n      e.preventDefault();\n      var navbar = select('#navbar');\n\n      if (navbar.classList.contains('navbar-mobile')) {\n        navbar.classList.remove('navbar-mobile');\n        var navbarToggle = select('.mobile-nav-toggle');\n        navbarToggle.classList.toggle('bi-list');\n        navbarToggle.classList.toggle('bi-x');\n      }\n\n      scrollto(this.hash);\n    }\n  }, true);\n  /**\r\n   * Scroll with ofset on page load with hash links in the url\r\n   */\n\n  window.addEventListener('load', function () {\n    if (window.location.hash) {\n      if (select(window.location.hash)) {\n        scrollto(window.location.hash);\n      }\n    }\n  });\n  /**\r\n   * Preloader\r\n   */\n\n  var preloader = select('#preloader');\n\n  if (preloader) {\n    window.addEventListener('load', function () {\n      preloader.remove();\n    });\n  }\n  /**\r\n   * Menu isotope and filter\r\n   */\n\n\n  window.addEventListener('load', function () {\n    var menuContainer = select('.menu-container');\n\n    if (menuContainer) {\n      var menuIsotope = new Isotope(menuContainer, {\n        itemSelector: '.menu-item',\n        layoutMode: 'fitRows'\n      });\n      var menuFilters = select('#menu-flters li', true);\n      on('click', '#menu-flters li', function (e) {\n        e.preventDefault();\n        menuFilters.forEach(function (el) {\n          el.classList.remove('filter-active');\n        });\n        this.classList.add('filter-active');\n        menuIsotope.arrange({\n          filter: this.getAttribute('data-filter')\n        });\n        menuIsotope.on('arrangeComplete', function () {\n          AOS.refresh();\n        });\n      }, true);\n    }\n  });\n  /**\r\n   * Initiate glightbox \r\n   */\n\n  var glightbox = GLightbox({\n    selector: '.glightbox'\n  });\n  /**\r\n   * Events slider\r\n   */\n\n  new Swiper('.events-slider', {\n    speed: 600,\n    loop: true,\n    autoplay: {\n      delay: 5000,\n      disableOnInteraction: false\n    },\n    slidesPerView: 'auto',\n    pagination: {\n      el: '.swiper-pagination',\n      type: 'bullets',\n      clickable: true\n    }\n  });\n  /**\r\n   * Testimonials slider\r\n   */\n\n  new Swiper('.testimonials-slider', {\n    speed: 600,\n    loop: true,\n    autoplay: {\n      delay: 5000,\n      disableOnInteraction: false\n    },\n    slidesPerView: 'auto',\n    pagination: {\n      el: '.swiper-pagination',\n      type: 'bullets',\n      clickable: true\n    },\n    breakpoints: {\n      320: {\n        slidesPerView: 1,\n        spaceBetween: 20\n      },\n      1200: {\n        slidesPerView: 3,\n        spaceBetween: 20\n      }\n    }\n  });\n  /**\r\n   * Initiate gallery lightbox \r\n   */\n\n  var galleryLightbox = GLightbox({\n    selector: '.gallery-lightbox'\n  });\n  /**\r\n   * Animation on scroll\r\n   */\n\n  window.addEventListener('load', function () {\n    AOS.init({\n      duration: 1000,\n      easing: 'ease-in-out',\n      once: true,\n      mirror: false\n    });\n  });\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/main.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/main.js"]();
/******/ 	
/******/ })()
;